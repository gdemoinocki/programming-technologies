ТП. Лабораторная работа №5 (Вариант 1)
Сжатие без потерь
Задания для самостоятельного выполнения
Реализуйте на любом языке программирования программу-архиватор, выполняющую упаковку и распаковку файла. Программа должна отображать степень сжатия:

ssr = (1 - compressed_size / original_size) * 100
compressed_size - размер сжатого файла, 
original_size - размер исходного файла.

Исходный и распакованный файл сравнить с помощью diff.

Бонусные баллы начисляются за:
Cамый быстрый алгоритм сжатия в своём классе
Cамый эффективный алгоритм сжатия в своём классе
Алгоритмы тестировать на файле из 10000 уникальных строк по 32 символа из всех доступных символов, сгенерированном на random.org

Варианты заданий

LZ77. Война и мир.
BWT+RLE. Геном домашней кошки.

Huffman. Произвольная книга из симулятора Вавилонской библиотеки.
Vitter. PPM файл. Формат PPM.

BWT+LZ77. ASCII STL файл. Формат STL.
MTF+RLE. Веб-страница. Пример страницы.

BWT+Huffman. Большой файл из SecLists (
≥
≥ 100 Мб).
BWT+Vitter. Блоки /dev/random. Файл (
≥
≥ 100 Мб).

MTF+LZ77. Самый большой файл из репозитория ядра Linux.
BWT+MTF+RLE. Словарь Ожегова.

MTF+Huffman. Любой файл 
≥
≥ 100 Мб из COMB. Пароль +w/P3PRqQQoJ6g.
MTF+Vitter. /var/log/Xorg.0.log.
